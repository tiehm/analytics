<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>

    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts.src.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">

    <style>
        #container .chart {
            min-width: 320px;
            max-width: 1200px;
            height: 220px;
            margin: 0 auto;
        }
        body {
            margin: 0!important;
            padding: 0!important;
        }
        * {
            font-family: 'Roboto', sans-serif;
        }
        #top {
            background-color: #4fb17c;
            text-align: center;
            margin: 0 0 40px 0;
            padding: 300px;
            display: flex;
            flex-direction: column;
            align-items: center;
            vertical-align: middle;
            font-size: 50px;
            color: white!important;
        }
        #top span {
            padding-top: 20px;
            font-size: 30px;
        }
        #data {
            color: #1b2834;
            font-size: 23px;
            text-align: center;
        }
        #data .highlight {
            color: #cd3d43!important;
        }
        .chart {
            margin: 0 auto;
            width: 90%;
            height: 500px;
        }

    </style>

</head>
<body>

<div id="top">

    WhatsApp Chat Data Analysis <br><span>made by Charlie Tiehm</span>

</div>
<div id="data">
    {{personTwo}} and {{personOne}} chatted for <span class="highlight">{{totalDays}} Days</span> with the first ever message on the <span class="highlight">{{firstMessage}}</span><br>The most messages were sent on <span class="highlight">{{mostActive}}</span> with <span class="highlight">{{mostMessageCount}}</span>  messages.
    <br><br>
    <h2>Top Emojis</h2>
    {{#each topEmojis }}
        {{this.name}} - {{this.count}}
    {{/each }}
    <br><br>
    <h2>Top Words</h2>
    {{topWords.all}}
    <br><br>
    <h2>Emojis are special. Let's see some stats!</h2>
    <div id="container"></div>
    <br><br>
    <h2>
        Who is chatting the most?!
    </h2>
    <div id="pie" class="chart"></div>
    <br><br>
    <h2>
        <span class="highlight">{{totalMessages}} Messages</span> were sent in total, but when?!
    </h2>
    <div id="msgs" class="chart">

    </div>
    <br><br>
    <h2>Which is the most active day for chatting ?</h2>
    <div id="days" class="chart"></div>
    <br><br>
    <h2>But what are the most active hours ?!</h2>
    <div id="hours" class="chart"></div>

</div>

<script>


    $('#container').bind('mousemove touchmove touchstart', function (e) {
        var chart,
                point,
                i,
                event;

        for (i = 0; i < Highcharts.charts.length; i = i + 1) {
            chart = Highcharts.charts[i];
            // Find coordinates within the chart
            event = chart.pointer.normalize(e.originalEvent);
            // Get the hovered point
            point = chart.series[0].searchPoint(event, true);

            if (point) {
                point.highlight(e);
            }
        }
    });
    /**
     * Override the reset function, we don't need to hide the tooltips and
     * crosshairs.
     */
    Highcharts.Pointer.prototype.reset = function () {
        return undefined;
    };

    Highcharts.Point.prototype.highlight = function (event) {
        event = this.series.chart.pointer.normalize(event);
        this.onMouseOver(); // Show the hover marker
        this.series.chart.tooltip.refresh(this); // Show the tooltip
        this.series.chart.xAxis[0].drawCrosshair(event, this);
    };

    /**
     * Synchronize zooming through the setExtremes event handler.
     */
    function syncExtremes(e) {
        var thisChart = this.chart;

        if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
            Highcharts.each(Highcharts.charts, function (chart) {
                if (chart !== thisChart) {
                    if (chart.xAxis[0].setExtremes) { // It is null while updating
                        chart.xAxis[0].setExtremes(
                                e.min,
                                e.max,
                                undefined,
                                false,
                                { trigger: 'syncExtremes' }
                        );
                    }
                }
            });
        }
    }

    var activity = {
        "xData": [{{allDaysInTimestamps}}],
        "datasets": [{
            "name": "Emoji possibility",
            "data": [{{allDaysInEmojiPerMessage}}],
            "unit": "Emoji per Message",
            "type": "area",
            "valueDecimals": 2
        }, {
            "name": "Total Messages",
            "data": [{{allDaysInTotalMessages}}]
            ,
            "unit": "Messages",
            "type": "area",
            "valueDecimals": 0
        },{
            "name": "Emojis",
            "data": [{{allDaysInEmoji}}],
            "unit": "Emojis",
            "type": "area",
            "valueDecimals": 0
        }
        ]
    };

    $.each(activity.datasets, function (i, dataset) {

        // Add X values
        dataset.data = Highcharts.map(dataset.data, function (val, j) {
            return [activity.xData[j], val];
        });

        $('<div class="chart">')
                .appendTo('#container')
                .highcharts({
                    chart: {
                        marginLeft: 40, // Keep all charts left aligned
                        spacingTop: 20,
                        spacingBottom: 20
                    },
                    title: {
                        text: dataset.name,
                        align: 'left',
                        margin: 0,
                        x: 30
                    },
                    credits: {
                        enabled: false
                    },
                    legend: {
                        enabled: false
                    },
                    xAxis: {
                        type: 'datetime',
                        crosshair: true,
                        events: {
                            setExtremes: syncExtremes
                        }

                    },
                    yAxis: {
                        title: {
                            text: null
                        }
                    },
                    tooltip: {
                        positioner: function () {
                            return {
                                // right aligned
                                x: this.chart.chartWidth - this.label.width,
                                y: 10 // align to title
                            };
                        },
                        borderWidth: 0,
                        backgroundColor: 'none',
                        pointFormat: '{point.y}',
                        headerFormat: '',
                        shadow: false,
                        style: {
                            fontSize: '18px'
                        },
                        valueDecimals: dataset.valueDecimals
                    },
                    series: [{
                        data: dataset.data,
                        name: dataset.name,
                        type: dataset.type,
                        color: Highcharts.getOptions().colors[i],
                        fillOpacity: 0.3,
                        tooltip: {
                            valueSuffix: ' ' + dataset.unit
                        }
                    }]
                });
    })



</script>

<script>

    Highcharts.chart('pie', {
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
            text: 'Message Percentage'
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}% with {point.count} messages</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} % with {point.count} messages',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                    }
                }
            }
        },
        series: [{
            name: 'Brands',
            colorByPoint: true,
            data: [
                {
                    name: '{{personOne}}',
                    y: {{totalMessagesByPersonOnePercentage}},
                    count: {{totalMessagesByPersonOne}}
                },
                {
                    name: '{{personTwo}}',
                    y: {{totalMessagesByPersonTwoPercentage}},
                    count: {{totalMessagesByPersonTwo}}
                }]
        }]
    });
    Highcharts.chart('msgs', {
        chart: {
            zoomType: 'x'
        },
        title: {
            text: 'Chat activity by time'
        },
        subtitle: {
            text: document.ontouchstart === undefined ?
                    'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'
        },
        xAxis: {
            type: 'datetime'
        },
        yAxis: {
            title: {
                text: 'Messages'
            }
        },
        legend: {
            enabled: false
        },
        plotOptions: {
            area: {
                fillColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 0,
                        y2: 1
                    },
                    stops: [
                        [0, Highcharts.getOptions().colors[0]],
                        [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                    ]
                },
                marker: {
                    radius: 2
                },
                lineWidth: 1,
                states: {
                    hover: {
                        lineWidth: 1
                    }
                },
                threshold: null
            }
        },

        series: [{
            type: 'area',
            name: 'Messages/day',
            data: [{{#each msgInfoPerDay}}[{{this}}],{{/each}}]

        }]
    });
    Highcharts.chart('days', {

        chart: {
            polar: true,
            type: 'line'
        },

        title: {
            text: '',
            x: -80
        },

        pane: {
            size: '80%'
        },

        xAxis: {
            categories: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
            tickmarkPlacement: 'on',
            lineWidth: 0
        },

        yAxis: {
            gridLineInterpolation: 'polygon',
            lineWidth: 0,
            min: 0
        },

        tooltip: {
            shared: true,
            pointFormat: '<span style="color:{series.color}">{series.name}: <b>{point.y:,.0f}</b><br/>'
        },

        legend: {
            align: 'right',
            verticalAlign: 'top',
            y: 70,
            layout: 'vertical'
        },

        series: [{
            name: 'General',
            data: [{{messagesPerDays}}],
            pointPlacement: 'on'
        }, {
            name: '{{personOne}}',
            data: [{{messagesPerDaysOne}}],
            pointPlacement: 'on'
        }, {
            name: '{{personTwo}}',
            data: [{{messagesPerDaysTwo}}],
            pointPlacement: 'on'
        }]

    });
    Highcharts.chart('hours', {
        chart: {
            type: 'areaspline'
        },
        title: {
            text: ''
        },
        legend: {
            layout: 'vertical',
            align: 'left',
            verticalAlign: 'top',
            x: 150,
            y: 100,
            floating: true,
            borderWidth: 1,
            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
        },
        xAxis: {
            categories: [
                '00',
                '01',
                '02',
                '03',
                '04',
                '05',
                '06',
                '07',
                '08',
                '09',
                '10',
                '11',
                '12',
                '13',
                '14',
                '15',
                '16',
                '17',
                '18',
                '19',
                '20',
                '21',
                '22',
                '23'
            ]
        },
        yAxis: {
            title: {
                text: 'Messages'
            }
        },
        tooltip: {
            shared: true,
            valueSuffix: ' messages'
        },
        credits: {
            enabled: false
        },
        plotOptions: {
            areaspline: {
                fillOpacity: 0.5
            }
        },
        series: [{
            name: 'General',
            data: [{{allMessagesByHour}}]
        }, {
            name: '{{personOne}}',
            data: [{{allMessagesByHourOne}}]
        }, {
            name: '{{personTwo}}',
            data: [{{allMessagesByHourTwo}}]
        }]
    });


</script>



</body>
</html>
